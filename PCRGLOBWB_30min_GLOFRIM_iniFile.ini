[globalOptions]

# Set the input directory map in an absolute path.
# - The input forcing and parameter directories will be relative to this.
inputDir = /path/to/PCRinput/input30min/

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
cloneMap = cloneMap.map

# The area/landmask of interest:
landmask = landmask.map
# If None, area/landmask is limited for cells with ldd value.

# Set the output directory in an absolute path.
# NOTE: if multiple GLOFRIM runs are ought to be executed simultaneously, each run needs an individual outputDir!
outputDir = /path/where/your/pcr/output/is/stored

# netcdf attributes for output files:
institution = Deltares and Utrecht University
title       = PCR-GLOBWB 2.0.3 model output at 30min resolution
description = test version (by Edwin H. Sutanudjaja, adjustments by Arjen V. Haag, even more adjustments by J.Hoch)

startTime = 1958-01-01
endTime   = 2010-12-31
# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
# NOTE: GLOFRIM requires at least 1 year of spin-up
maxSpinUpsInYears = 1
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

# 2-way coupling control
# NOTE: to initialize and spin-up PCR, these controls need to be set to False; they will be automatically set to True once coupling commences
ActivateCoupling = False
ActivateFactorInfiltrationFloodplain = False
ActivateZeroInfiltrationFloodplain = False

[prefactorOptions]

linear_multiplier_for_refPotET         = 1.0
linear_multiplier_for_degreeDayFactor  = 1.0
linear_multiplier_for_minSoilDepthFrac = 1.0
log_10_multiplier_for_kSat             = 0.0
linear_multiplier_for_storCap          = 1.0
log_10_multiplier_for_recessionCoeff   = 0.0

[meteoOptions]

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_precipitation_1958_to_2010.nc
temperatureNC   = forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_temperature_1958_to_2010.nc

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
referenceETPotMethod = Input
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
refETPotFileNC  = forcing/CRU-TS3.21_ERA-40_ERA-Interim_daily_referencePotET_1958_to_2010.nc

[meteoDownscalingOptions]

downscalePrecipitation  = None
downscaleTemperature    = None
downscaleReferenceETPot = None

# downscaling (based on the digital elevation model):
# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.
meteoDownscaleIds = None
highResolutionDEM = None

# lapse rates:
temperLapseRateNC = None
precipLapseRateNC = None

# downscaling criteria
temperatCorrelNC  = None
precipitCorrelNC  = None

# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):
smoothingWindowsLength = 0

[landSurfaceOptions]
debugWaterBalance = True

numberOfUpperSoilLayers = 2

topographyNC     = landSurface/topo/topoProperties.nc
soilPropertiesNC = landSurface/soil/soilProperties.nc

includeIrrigation = False
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland

# netcdf time series for historical expansion of irrigation areas (unit: hectares).
# Note: The resolution of this map must be consistent with the resolution of cellArea.
#~ historicalIrrigationArea = None
historicalIrrigationArea = landSurface/waterDemand/irrigated_areas/irrigationArea30ArcMin.nc

includeDomesticWaterDemand = False
includeIndustryWaterDemand = False

domesticWaterDemandFile = landSurface/waterDemand/domesticWaterDemand30ArcMin.nc
industryWaterDemandFile = landSurface/waterDemand/industryWaterDemand30ArcMin.nc

limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed
allocationSegmentsForGroundSurfaceWater = None
#~ allocationSegmentsForGroundSurfaceWater = others/irrigationZones/one_arc_degree/uniqueIds60min.nom.map

[forestOptions]
name = forest
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = landCover/forest/forestProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = landCover/forest/Global_CropCoefficientKc-Forest_30min.nc
interceptCapNC    = landCover/forest/interceptCapInputForest366days.nc
coverFractionNC   = landCover/forest/coverFractionInputForest366days.nc

# initial conditions:
interceptStorIni =
snowCoverSWEIni  = initialConditions_para/snowCoverSWE_forest_1984-12-31.map
snowFreeWaterIni = initialConditions_para/snowFreeWater_forest_1984-12-31.map
topWaterLayerIni = initialConditions_para/topWaterLayer_forest_1984-12-31.map
storUppIni       = initialConditions_para/storUpp_forest_1984-12-31.map
storLowIni       = initialConditions_para/storLow_forest_1984-12-31.map
interflowIni     = initialConditions_para/interflow_forest_1984-12-31.map

[grasslandOptions]
name = grassland
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

landCoverMapsNC  = landCover/grassland/grasslandProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

cropCoefficientNC = landCover/grassland/Global_CropCoefficientKc-Grassland_30min.nc
interceptCapNC    = landCover/grassland/interceptCapInputGrassland366days.nc
coverFractionNC   = landCover/grassland/coverFractionInputGrassland366days.nc

# initial conditions:
interceptStorIni = initialConditions_para/interceptStor_grassland_1984-12-31.map
snowCoverSWEIni  = initialConditions_para/snowCoverSWE_grassland_1984-12-31.map
snowFreeWaterIni = initialConditions_para/snowFreeWater_grassland_1984-12-31.map
topWaterLayerIni = initialConditions_para/topWaterLayer_grassland_1984-12-31.map
storUppIni       = initialConditions_para/storUpp_grassland_1984-12-31.map
storLowIni       = initialConditions_para/storLow_grassland_1984-12-31.map
interflowIni     = initialConditions_para/interflow_grassland_1984-12-31.map

[irrPaddyOptions]
name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = landCover/irrPaddy/paddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.2

cropCoefficientNC = landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc

# initial conditions:

interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[irrNonPaddyOptions]
name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           = -0.0
degreeDayFactor     =  0.0025
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = landCover/irrNonPaddy/nonPaddyProperties.nc
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002
cropDeplFactor   = 0.5

cropCoefficientNC = landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:

interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

[groundwaterOptions]
debugWaterBalance = True

groundwaterPropertiesNC = groundwater/groundwaterProperties.nc

# minimum value for groundwater recession coefficient (day-1)
minRecessionCoeff = 2.5e-4

# initial condition:
storGroundwaterIni = initialConditions_para/storGroundwater_1984-12-31.map
storGroundwaterFossilIni = initialConditions_para/storGroundwaterFossil_1984-12-31.map
avgTotalGroundwaterAbstractionIni = initialConditions_para/avgTotalGroundwaterAbstractionIni_1984-12-31.map

[routingOptions]
debugWaterBalance = True

lddMap      = routing/lddsound_30min.map
cellAreaMap = routing/cellarea30min.map
gradient    = routing/Global_ChannelGradient-RVB_30min.map

# manning coefficient
manningsN   = 0.03

# constant channel width (optional)
constantChannelWidth = None

# minimum channel width (optional)
minimumChannelWidth  = None

routingMethod = kinematicWave
# Options are kinematicWave, simplifiedKinematicWave and accuTravelTime

# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
#~ maxiumLengthOfSubTimeStep = 3600.
#~ maxiumLengthOfSubTimeStep = 720.

# lake and reservoir parameters
waterBodyInputNC = routing/reservoirs/fromRensJune2013/reservoirparameterization/waterBodies30min.nc
onlyNaturalWaterBodies = True

# composite crop factors for WaterBodies:
cropCoefficientWaterNC = routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 0.20

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module (i.e. channelStorageIni, avgDischargeLongIni, avgDischargeShortIni, etc.)
#timestepsToAvgDischargeIni     = 0.0
timestepsToAvgDischargeIni     = initialConditions_para/timestepsToAvgDischarge_1984-12-31.map

# Note that:
# - maximum number of days (timesteps) to calculate long term average flow values (default: 5 years = 5 * 365 days = 1825)
# - maximum number of days (timesteps) to calculate short term average values (default: 1 month = 1 * 30 days = 30)

# initial conditions:
waterBodyStorageIni            = initialConditions_para/waterBodyStorage_1984-12-31.map
channelStorageIni              = initialConditions_para/channelStorage_1984-12-31.map
readAvlChannelStorageIni       = initialConditions_para/readAvlChannelStorage_1984-12-31.map
avgDischargeLongIni            = initialConditions_para/avgDischargeLong_1984-12-31.map
m2tDischargeLongIni            = initialConditions_para/m2tDischargeLong_1984-12-31.map
avgBaseflowLongIni             = initialConditions_para/avgBaseflowLong_1984-12-31.map
riverbedExchangeIni            = initialConditions_para/riverbedExchange_1984-12-31.map
avgLakeReservoirInflowShortIni = initialConditions_para/avgLakeReservoirInflowShort_1984-12-31.map
avgLakeReservoirOutflowLongIni = initialConditions_para/avgLakeReservoirOutflowLong_1984-12-31.map

#
# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
#subDischargeIni                = 0.0
subDischargeIni                = initialConditions_para/subDischarge_1984-12-31.map
#
# other initial conditions (optional):
#avgDischargeShortIni           = 0.0
avgDischargeShortIni           = initialConditions_para/avgDischargeShort_1984-12-31.map

[reportingOptions]
# output files that will be written in the disk in netcdf files:
outDailyTotNC = discharge,runoff
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None
