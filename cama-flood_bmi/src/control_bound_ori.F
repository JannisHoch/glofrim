MODULE CONTROL_BOUND_MOD
CONTAINS 
SUBROUTINE CONTROL_BOUND(IYYYYP,IMMP,IDDP,KHHMMP)
! ===============================================
! control boundary condition of river mouth
! ===============================================

USE PARKIND1   ,ONLY: JPIM, JPRB, JPRM
USE MOD_INPUT  ,ONLY: LOGNAM, NX, NY, DT, DTIN, RMIS, LINPEND
USE MOD_INPUT  ,ONLY: LBOUNDSL, CBOUNDDIR, CBOUNDPRE, CBOUNDSUF, &
                      CRUNOFFCDF, CROFCDFVAR, SYEARIN, SMONIN, SDAYIN
USE MOD_INPUT  ,ONLY: TMPNAM
USE MOD_MAP    ,ONLY: I2VECTOR,NSEQALL,NSEQMAX
USE MOD_TIME   ,ONLY: NSTEPS, KMINP
USE MOD_PROG   ,ONLY: D2BOUND
USE LIB_DATES  ,ONLY: DATE2MIN

!=================================================
implicit none
INTEGER(KIND=JPIM),INTENT(IN)    ::    IYYYYP,IMMP,IDDP,KHHMMP             !! date (start of time step)

!== LOCAL 
REAL(KIND=JPRM),ALLOCATABLE   ::  R2BOUNDIN(:,:)  ! for input boundary condition (m)

!$ SAVE
INTEGER(KIND=JPIM)            ::  ISEQ
CHARACTER(LEN=256)            ::  CBOUNDNAME      !! input boundary file name
CHARACTER(LEN=256)            ::  CDAYTIME      

! ===============================================
!#ifdef UseCDF
!CALL INIT_BOUND_CDF
!#endif
! ===============================================

ALLOCATE( R2BOUNDIN(NX,NY) )
DO ISEQ=1, NSEQALL
  D2BOUND(ISEQ,1)=0.D0
ENDDO

WRITE(CDAYTIME,'(I4.4,I2.2,I2.2,I4.4)')IYYYYP,IMMP,IDDP,KHHMMP
CBOUNDNAME=TRIM(CBOUNDDIR)//TRIM(CBOUNDPRE)//TRIM(CDAYTIME)//TRIM(CBOUNDSUF)

WRITE(LOGNAM,*) "READ_BOUNDARY_SL BIN:",TRIM(CBOUNDNAME)

OPEN(TMPNAM,FILE=CBOUNDNAME,FORM='UNFORMATTED',ACCESS='DIRECT',RECL=4*NX*NY)
READ(TMPNAM,REC=1) R2BOUNDIN
CALL MAP2VEC(R2BOUNDIN,D2BOUND)
CLOSE(TMPNAM)

DEALLOCATE(R2BOUNDIN)

CONTAINS


! =================================================
SUBROUTINE MAP2VEC(R2TEMP,D2VAR)
IMPLICIT NONE

REAL(KIND=JPRM)              :: R2TEMP(NX,NY)
REAL(KIND=JPRB)              :: D2VAR(NSEQMAX,1)
INTEGER(KIND=JPIM)           :: IX, IY


DO IY=1, NY
  DO IX=1, NX
    IF( I2VECTOR(IX,IY)>0 )THEN
      ISEQ=I2VECTOR(IX,IY)
      D2VAR(ISEQ,1)=DBLE(R2TEMP(IX,IY))
    ENDIF
  END DO
END DO

END SUBROUTINE MAP2VEC


END SUBROUTINE CONTROL_BOUND
END MODULE CONTROL_BOUND_MOD
