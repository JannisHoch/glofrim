MODULE CONTROL_OUT_MOD
CONTAINS 
SUBROUTINE CONTROL_OUT(IYYYYP,IMMP,IDDP)

! ================================================
! control output files
! ================================================
USE PARKIND1   ,ONLY: JPIM, JPRB, JPRM
USE MOD_INPUT  ,ONLY: LOGNAM, NX,NY, IMIS,RMIS, &
                      LOUTCDF, LOUTVEC, LPTHOUT, COUTINSDIR
USE MOD_MAP    ,ONLY: NSEQALL, NSEQMAX, NPTHOUT, NPTHLEV
USE MOD_OUTPUT ,ONLY: FUNITS,  CDFUNITS, COUTVARDIR, COUTVN, NVARS
USE MOD_TIME   ,ONLY: KSTEP, KYYYYMMDD, KHHMM, KHHMMP
USE MOD_PROG   ,ONLY: D2RIVSTO_OUT, D2FLDSTO_OUT
USE MOD_DIAG   ,ONLY: D2RIVDPH, D2FLDDPH, D2FLDFRC, D2FLDARE,&
                      D2SFCELV, D2OUTFLW, D2STORGE, D2OUTFLW_AVG
USE MOD_DIAG   ,ONLY: D2RIVOUT_AVG, D2FLDOUT_AVG, D2RIVVEL_AVG, D2PTHOUT_AVG, D1PTHFLW_AVG, NADD, D2OUTINS

USE MOD_DIAG   ,ONLY: R2RIVINF, R2RIVDPH, R2RIVVEL, R2FLDINF,&
                      R2FLDDPH, R2FLDFRC, R2FLDARE, R2PTHOUT,&
                      R2PTHINF, R2SFCELV, R2OUTFLW, R2STORGE,&
                      R2RIVOUT_AVG, R2OUTFLW_AVG, R2FLDOUT_AVG,&
                      R2RIVVEL_AVG, R2PTHOUT_AVG, R2PTHFLW_AVG

USE CREATE_OUTBIN_MOD
USE CREATE_OUTCDF_MOD

implicit none
! ================================================
INTEGER(KIND=JPIM)    ::    IYYYYP,IMMP,IDDP                   !! date (start of time step)

SAVE
INTEGER(KIND=JPIM)             :: IREC
INTEGER(KIND=JPIM)             :: ISEQ, IPTH
! ================================================

IF ( KSTEP == 1 ) THEN
  IF (.not.LOUTCDF)THEN
    CALL CREATE_OUTBIN(IYYYYP)
  ELSE
    CALL CREATE_OUTCDF(IYYYYP)
  ENDIF
  IREC=1
ENDIF

IF( KSTEP>0 .AND. IMMP==1 .and. IDDP==1 .AND. KHHMMP==0 .AND. (.not. LOUTCDF) )THEN
  CALL CREATE_OUTBIN(IYYYYP)
ENDIF

IF (KHHMM==0 ) THEN
!IF (MOD(KHHMM,10)==0) THEN

!IF ( MOD(KHHMM,10)==0 .AND. KYYYYMMDD*10000+KHHMM>=200508231800 & ! Hurricane Katrina
!        .AND. KYYYYMMDD*10000+KHHMM<=200509060600) THEN
!  WRITE(LOGNAM,*) 'CONTROL OUT WRITE',NADD,IREC

!IF ( MOD(KHHMM,10)==0 .AND. KYYYYMMDD*10000+KHHMM>=200711100600 & ! Cyclone Sidr
!        .AND. KYYYYMMDD*10000+KHHMM<=200711182350) THEN
!  WRITE(LOGNAM,*) 'CONTROL OUT WRITE',NADD,IREC

!IF ( MOD(KHHMM,10)==0 .AND. KYYYYMMDD*10000+KHHMM>=200804251200 & ! Cyclone Nargis
!        .AND. KYYYYMMDD*10000+KHHMM<=200805031200) THEN
!  WRITE(LOGNAM,*) 'CONTROL OUT WRITE',NADD,IREC


  WRITE(LOGNAM,*) 'CONTROL OUT WRITE',NADD,IREC
  !$OMP PARALLEL DO
  DO ISEQ=1, NSEQALL
    D2RIVOUT_AVG(ISEQ,1)=D2RIVOUT_AVG(ISEQ,1)/DBLE(NADD)
    D2FLDOUT_AVG(ISEQ,1)=D2FLDOUT_AVG(ISEQ,1)/DBLE(NADD)
    D2RIVVEL_AVG(ISEQ,1)=D2RIVVEL_AVG(ISEQ,1)/DBLE(NADD)
    D2OUTFLW_AVG(ISEQ,1)=D2OUTFLW_AVG(ISEQ,1)/DBLE(NADD)   !! bugfix v362
  END DO
  !$OMP END PARALLEL DO

  IF( LPTHOUT )THEN
    !$OMP PARALLEL DO
    DO ISEQ=1, NSEQALL
      D2PTHOUT_AVG(ISEQ,1)=D2PTHOUT_AVG(ISEQ,1)/DBLE(NADD)
    END DO
    !$OMP END PARALLEL DO

    !$OMP PARALLEL DO
    DO IPTH=1, NPTHOUT
      D1PTHFLW_AVG(IPTH,:)=D1PTHFLW_AVG(IPTH,:)/DBLE(NADD)
    END DO
    !$OMP END PARALLEL DO
  ENDIF
  NADD=0

  CALL CONV_OUT_VEC2MAP

  IF( COUTINSDIR .NE. 'NONE' ) CALL CALC_OUTINS
  IF ( .not.LOUTCDF ) THEN
    CALL WRTE_BIN
  ELSE
    CALL WRTE_CDF
  ENDIF 
  IREC=IREC+1
  IF( MOD(KYYYYMMDD,10000)==101 .and. KHHMM==0 ) IREC=1

  !$OMP PARALLEL DO
  DO ISEQ=1, NSEQALL
    D2RIVOUT_AVG(ISEQ,1)=0.D0
    D2FLDOUT_AVG(ISEQ,1)=0.D0
    D2RIVVEL_AVG(ISEQ,1)=0.D0
    D2OUTFLW_AVG(ISEQ,1)=0.D0    !! bugfix v362
    NADD=0
  END DO
  !$OMP END PARALLEL DO

  IF( LPTHOUT )THEN
    !$OMP PARALLEL DO
    DO ISEQ=1, NSEQALL
      D2PTHOUT_AVG(ISEQ,1)=0.D0
    END DO
    !$OMP END PARALLEL DO

    !$OMP PARALLEL DO
    DO IPTH=1, NPTHOUT
      D1PTHFLW_AVG(IPTH,:)=0.D0
    END DO
    !$OMP END PARALLEL DO
  ENDIF

ENDIF 

CONTAINS 

SUBROUTINE CONV_OUT_VEC2MAP
  CALL VEC2MAP(D2RIVINF,     R2RIVINF    )
  CALL VEC2MAP(D2RIVDPH,     R2RIVDPH    )
  CALL VEC2MAP(D2RIVVEL,     R2RIVVEL    )
  CALL VEC2MAP(D2FLDINF,     R2FLDINF    )
  CALL VEC2MAP(D2FLDDPH,     R2FLDDPH    )
  CALL VEC2MAP(D2FLDFRC,     R2FLDFRC    )
  CALL VEC2MAP(D2FLDARE,     R2FLDARE    )
  CALL VEC2MAP(D2PTHOUT,     R2PTHOUT    )
  CALL VEC2MAP(D2PTHINF,     R2PTHINF    )
  CALL VEC2MAP(D2SFCELV,     R2SFCELV    )
  CALL VEC2MAP(D2OUTFLW,     R2OUTFLW    )
  CALL VEC2MAP(D2STORGE,     R2STORGE    )
  CALL VEC2MAP(D2RIVOUT_AVG, R2RIVOUT_AVG)
  CALL VEC2MAP(D2OUTFLW_AVG, R2OUTFLW_AVG)
  CALL VEC2MAP(D2FLDOUT_AVG, R2FLDOUT_AVG)
  CALL VEC2MAP(D2RIVVEL_AVG, R2RIVVEL_AVG)
  CALL VEC2MAP(D2PTHOUT_AVG, R2PTHOUT_AVG)
  CALL VEC2MAP(D1PTHFLW_AVG, R1PTHFLW_AVG)
  CALL VEC2MAP(D2RIVSTO_OUT, R2RIVSTO_OUT)
  CALL VEC2MAP(D2FLDSTO_OUT, R2FLDSTO_OUT)
END SUBROUTINE CONV_OUT_VEC2MAP

SUBROUTINE WRTE_BIN
! =================================================
IMPLICIT NONE

IF (.not.LOUTVEC) THEN ! VECTORIAL OUTPUT
  CALL WRTE_OUTBIN(FUNITS(1), IREC,D2RIVOUT_AVG,COUTVARDIR(1))
  CALL WRTE_OUTBIN(FUNITS(2), IREC,D2RIVSTO_OUT,COUTVARDIR(2))
  CALL WRTE_OUTBIN(FUNITS(3), IREC,D2RIVDPH,    COUTVARDIR(3))
  CALL WRTE_OUTBIN(FUNITS(4), IREC,D2RIVVEL_AVG,COUTVARDIR(4))

  CALL WRTE_OUTBIN(FUNITS(5), IREC,D2FLDOUT_AVG,COUTVARDIR(5))
  CALL WRTE_OUTBIN(FUNITS(6), IREC,D2FLDSTO_OUT,COUTVARDIR(6))
  CALL WRTE_OUTBIN(FUNITS(7), IREC,D2FLDDPH,    COUTVARDIR(7))
  CALL WRTE_OUTBIN(FUNITS(8), IREC,D2FLDFRC,    COUTVARDIR(8))
  CALL WRTE_OUTBIN(FUNITS(9), IREC,D2FLDARE,    COUTVARDIR(9))

  CALL WRTE_OUTBIN(FUNITS(10),IREC,D2SFCELV,    COUTVARDIR(10))
  CALL WRTE_OUTBIN(FUNITS(11),IREC,D2OUTFLW_AVG,COUTVARDIR(11))    !! bugfix v362
  CALL WRTE_OUTBIN(FUNITS(12),IREC,D2STORGE,    COUTVARDIR(12))
  CALL WRTE_OUTBIN(FUNITS(13),IREC,D2STORGE,    COUTVARDIR(13))

  CALL WRTE_OUTBIN(FUNITS(14),IREC,D2PTHOUT_AVG,COUTVARDIR(14))
  CALL WRTE_OUTPTH(FUNITS(15),IREC,D1PTHFLW_AVG,COUTVARDIR(15))

ELSE
  CALL WRTE_OUTVEC(FUNITS(1), IREC,D2RIVOUT_AVG,COUTVARDIR(1))
  CALL WRTE_OUTVEC(FUNITS(2), IREC,D2RIVSTO_OUT,COUTVARDIR(2))
  CALL WRTE_OUTVEC(FUNITS(3), IREC,D2RIVDPH,    COUTVARDIR(3))
  CALL WRTE_OUTVEC(FUNITS(4), IREC,D2RIVVEL_AVG,COUTVARDIR(4))

  CALL WRTE_OUTVEC(FUNITS(5), IREC,D2FLDOUT_AVG,COUTVARDIR(5))
  CALL WRTE_OUTVEC(FUNITS(6), IREC,D2FLDSTO_OUT,COUTVARDIR(6))
  CALL WRTE_OUTVEC(FUNITS(7), IREC,D2FLDDPH,    COUTVARDIR(7))
  CALL WRTE_OUTVEC(FUNITS(8), IREC,D2FLDFRC,    COUTVARDIR(8))
  CALL WRTE_OUTVEC(FUNITS(9), IREC,D2FLDARE,    COUTVARDIR(9))

  CALL WRTE_OUTVEC(FUNITS(10),IREC,D2SFCELV,    COUTVARDIR(10))
  CALL WRTE_OUTVEC(FUNITS(11),IREC,D2OUTFLW_AVG,COUTVARDIR(11))    !! bugfix v362
  CALL WRTE_OUTVEC(FUNITS(12),IREC,D2STORGE,    COUTVARDIR(12))
  CALL WRTE_OUTVEC(FUNITS(13),IREC,D2OUTINS,    COUTVARDIR(13))

  CALL WRTE_OUTVEC(FUNITS(14),IREC,D2PTHOUT_AVG,COUTVARDIR(14))
  CALL WRTE_OUTPTH(FUNITS(15),IREC,D1PTHFLW_AVG,COUTVARDIR(15))
ENDIF

END SUBROUTINE WRTE_BIN





! ================================================
SUBROUTINE WRTE_OUTBIN(IFN,IREC,D2VEC,CVAROUTDIR)
IMPLICIT NONE

!*** INPUT
INTEGER(KIND=JPIM),INTENT(IN)  ::  IFN                 !! FILE NUMBER
INTEGER(KIND=JPIM),INTENT(IN)  ::  IREC                !! RECORD
REAL(KIND=JPRB),INTENT(IN)     ::  D2VEC(NSEQMAX,1)    !! OUTPUT DATA
CHARACTER*128                  ::  CVAROUTDIR          !! VARIABLE OUTPUT DIR

!*** LOCAL
REAL(KIND=JPRM)                ::  R2MAP(NX,NY)
!!==============================
IF (CVAROUTDIR.NE.'NONE') THEN
  CALL VEC2MAP(D2VEC,R2MAP)
  WRITE(IFN,REC=IREC) R2MAP
ENDIF
!
END SUBROUTINE WRTE_OUTBIN




! ================================================
SUBROUTINE WRTE_OUTVEC(IFN,IREC,D2OUTDAT,CVAROUTDIR)
IMPLICIT NONE

!*** INPUT
INTEGER(KIND=JPIM),INTENT(IN)             ::  IFN                 !! FILE NUMBER
INTEGER(KIND=JPIM),INTENT(IN)             ::  IREC                !! RECORD
REAL(KIND=JPRB),INTENT(IN)                ::  D2OUTDAT(NSEQMAX,1) !! OUTPUT DATA
CHARACTER*128       ::  CVAROUTDIR                                !! VARIABLE OUTPUT DIR

!*** LOCAL
REAL(KIND=JPRM)     ::  R2OUTDAT(NSEQMAX,1)
! ================================================
IF (CVAROUTDIR.NE.'NONE') THEN
  R2OUTDAT(:,:)=REAL(D2OUTDAT(:,:))
  WRITE(IFN,REC=IREC) R2OUTDAT
ENDIF

END SUBROUTINE WRTE_OUTVEC



! ================================================
SUBROUTINE WRTE_OUTPTH(IFN,IREC,D2OUTDAT,CVAROUTDIR)
IMPLICIT NONE

!*** INPUT
INTEGER(KIND=JPIM),INTENT(IN)             ::  IFN                 !! FILE NUMBER
INTEGER(KIND=JPIM),INTENT(IN)             ::  IREC                !! RECORD
REAL(KIND=JPRB),INTENT(IN)                ::  D2OUTDAT(NPTHOUT,NPTHLEV) !! OUTPUT DATA
CHARACTER*128       ::  CVAROUTDIR                                !! VARIABLE OUTPUT DIR

!*** LOCAL
REAL(KIND=JPRM)     ::  R2OUTDAT(NPTHOUT,NPTHLEV)
! ================================================
IF (CVAROUTDIR.NE.'NONE') THEN
  R2OUTDAT(:,:)=REAL(D2OUTDAT(:,:))
  WRITE(IFN,REC=IREC) R2OUTDAT
ENDIF

END SUBROUTINE WRTE_OUTPTH




SUBROUTINE WRTE_CDF
#ifdef UseCDF
! ==================================================
USE NETCDF 
USE LIB_NETCDF_UTIL
USE MOD_TIME, ONLY:KMINSTART,KMIN,NSTEPS
IMPLICIT NONE

INTEGER(KIND=JPIM)   :: JF,VARID
REAL(KIND=JPRB)      :: XTIME ! seconds since start of the run !
REAL(KIND=JPRB)      :: D2VEC(NSEQMAX,1)
REAL(KIND=JPRM)      :: Z2MAP(NX,NY)

XTIME=REAL( (KMIN-KMINSTART),JPRB) *60._JPRB

DO JF=1,NVARS-1
  IF ( CDFUNITS(JF) .EQ. 0 ) CYCLE 

  SELECT CASE (JF)
    CASE (1);  D2VEC(:,:)=D2RIVOUT_AVG(:,:)
    CASE (2);  D2VEC(:,:)=D2RIVSTO_OUT(:,:)
    CASE (3);  D2VEC(:,:)=D2RIVDPH(:,:)
    CASE (4);  D2VEC(:,:)=D2RIVVEL_AVG(:,:)

    CASE (5);  D2VEC(:,:)=D2FLDOUT_AVG(:,:)
    CASE (6);  D2VEC(:,:)=D2FLDSTO_OUT(:,:)
    CASE (7);  D2VEC(:,:)=D2FLDDPH(:,:)
    CASE (8);  D2VEC(:,:)=D2FLDFRC(:,:)
    CASE (9);  D2VEC(:,:)=D2FLDARE(:,:)

    CASE (10); D2VEC(:,:)=D2SFCELV(:,:)
    CASE (11); D2VEC(:,:)=D2OUTFLW_AVG(:,:)  !! bugfix v362
    CASE (12); D2VEC(:,:)=D2STORGE(:,:)
    CASE (13); D2VEC(:,:)=D2OUTINS(:,:)
    
    CASE (14); D2VEC(:,:)=D2PTHOUT_AVG(:,:)
  END SELECT

  CALL NCERROR( NF90_INQ_VARID(CDFUNITS(JF),'time',VARID))
  CALL NCERROR( NF90_PUT_VAR(CDFUNITS(JF),VARID,XTIME,(/IREC/)) )

  CALL NCERROR( NF90_INQ_VARID(CDFUNITS(JF),TRIM(COUTVN(JF)),VARID))

  IF (.NOT. LOUTVEC) THEN
    CALL VEC2MAP(D2VEC,Z2MAP)
    print *,"WRTE_CDF",TRIM(COUTVN(JF)),(/1,1,IREC/),(/NX,NY,1/)
    CALL NCERROR( NF90_PUT_VAR(CDFUNITS(JF),VARID,Z2MAP(1:NX,1:NY),(/1,1,IREC/),(/NX,NY,1/)) )
  ELSE
    print *,"WRTE_CDF",TRIM(COUTVN(JF)),(/1,IREC/),(/NSEQMAX,1/)
    CALL NCERROR( NF90_PUT_VAR(CDFUNITS(JF),VARID,D2VEC(1:NSEQMAX,1),(/1,IREC/),(/NSEQMAX,1/)) )
  ENDIF
    
  CALL NCERROR( NF90_SYNC(CDFUNITS(JF)) )
  
  IF ( KSTEP == NSTEPS) CALL NCERROR( NF90_CLOSE(CDFUNITS(JF)) )
END DO
#endif
END SUBROUTINE WRTE_CDF 





! ================================================
SUBROUTINE VEC2MAP(D2VEC,R2MAP)
USE MOD_MAP    ,ONLY: I2VECTOR
IMPLICIT NONE

REAL(KIND=JPRB)              :: D2VEC(NSEQMAX,1)
REAL(KIND=JPRM)              :: R2MAP(NX,NY)

!$ SAVE
INTEGER(KIND=JPIM)           ::  IX,IY,ISEQ
!$OMP THREADPRIVATE(IX,ISEQ)
! ======
R2MAP(:,:) = RMIS
!$OMP PARALLEL DO
DO IY=1, NY
  DO IX=1, NX
    IF (I2VECTOR(IX,IY)>0) THEN
      ISEQ=I2VECTOR(IX,IY)
      R2MAP(IX,IY) = REAL(D2VEC(ISEQ,1))
    END IF
  END DO
END DO
!$OMP END PARALLEL DO

END SUBROUTINE VEC2MAP





! ================================================
SUBROUTINE CALC_OUTINS
! to   Calculate discharge, INST. NO ROUTING DELAY

USE MOD_MAP    ,ONLY: I2RIVSEQ,RIVSEQMAX,I2VECTOR,I2NEXTX,I2NEXTY
USE MOD_PROG   ,ONLY: D2RUNOFF
IMPLICIT NONE

!!** LOCAL
INTEGER(KIND=JPIM)          :: IRIVSEQ,ISEQ,JSEQ,IX,IY,JX,JY

!!==============================
D2OUTINS(:,:)=D2RUNOFF(:,:)

DO IRIVSEQ=1, RIVSEQMAX
  DO IY=1, NY
    DO IX=1, NX
      IF( I2RIVSEQ(IX,IY)==IRIVSEQ .AND. I2NEXTX(IX,IY)>0 )THEN
        JX=I2NEXTX(IX,IY)
        JY=I2NEXTY(IX,IY)
        ISEQ=I2VECTOR(IX,IY)
        JSEQ=I2VECTOR(JX,JY)
        D2OUTINS(JSEQ,1)=D2OUTINS(JSEQ,1)+D2OUTINS(ISEQ,1)
      ENDIF
    END DO
  END DO
END DO

END SUBROUTINE CALC_OUTINS



END SUBROUTINE CONTROL_OUT
END MODULE CONTROL_OUT_MOD
