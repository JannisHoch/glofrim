MODULE CREATE_OUTBIN_MOD

CONTAINS

SUBROUTINE CREATE_OUTBIN(IYEAR)

!**** *CREATE_OUTBIN*  - CREATE_OUT BINARY FILES

!***  Interface.
!     ----------
!        *CALL* *INIT_MAP
!     Author.
!     -------
!        EMANUEL DUTRA & DAI YAMAZAKI
!     Modifications.
!     --------------
!        Original : 2011-05-04
!     ------------------------------------------------------------------

USE PARKIND1   ,ONLY: JPIM, JPRB, JPRM
USE MOD_INPUT  ,ONLY: LOGNAM,LOUTVEC,NX,NY,LPTHOUT
USE MOD_MAP    ,ONLY: NSEQMAX, NPTHOUT, NPTHLEV
USE MOD_OUTPUT ,ONLY: NVARS,FUNITS,COUTVARDIR,COUTVN,LOPEN,&
                      CSUFBIN, CSUFVEC, CSUFPTH
IMPLICIT NONE
INTEGER             ::  IYEAR               !! YEAR
INTEGER             ::  JF

!!=== 
IF (LOPEN) THEN
  WRITE(LOGNAM,*) "CREATE_OUTBIN: CLOSING PREVIOUS UNITS"

  DO JF=1, NVARS
    if (COUTVARDIR(JF).NE.'NONE') CLOSE(FUNITS(JF))
  ENDDO
ENDIF

!!====
WRITE(LOGNAM,*) "****CREATE_OUTBIN: ****"

IF (LOUTVEC) THEN ! VECTORIAL OUTPUT
  WRITE(LOGNAM,*) "CREATE_OUTBIN: VECTORIAL OUTPUT"

  DO JF=1, NVARS
    IF (COUTVARDIR(JF).NE.'NONE')THEN
      IF( JF/=NVARS) THEN
        CALL OPEN_OUTVEC(IYEAR,FUNITS(JF), COUTVARDIR(JF),COUTVN(JF))
      ELSE
        CALL OPEN_OUTPTH(IYEAR,FUNITS(JF), COUTVARDIR(JF),COUTVN(JF))
      ENDIF
    ENDIF
  END DO
  LOPEN=.TRUE.

ELSE ! NX,NY OUTPUT
  WRITE(LOGNAM,*) "CREATE_OUTBIN: REGULAR NX,NY OUPUT"
  DO JF=1, NVARS
    IF (COUTVARDIR(JF).NE.'NONE')THEN
      IF( JF/=NVARS) THEN
        CALL OPEN_OUTBIN(IYEAR,FUNITS(JF), COUTVARDIR(JF),COUTVN(JF))
      ELSE
        CALL OPEN_OUTPTH(IYEAR,FUNITS(JF), COUTVARDIR(JF),COUTVN(JF))
      ENDIF
    ENDIF
  END DO
  
  LOPEN=.TRUE.
ENDIF

CONTAINS


!!================================================
SUBROUTINE OPEN_OUTVEC(IYEAR,IFN,COUTDIR,CVARNAME)
IMPLICIT NONE

! 
INTEGER             ::  IYEAR               !! YEAR
INTEGER             ::  IFN                 !! FILE NUM
CHARACTER*128       ::  COUTDIR             !! OUTPUT DIR
CHARACTER*128       ::  CVARNAME            !! VARIAVLE NAME
! 
CHARACTER*128       ::  CFILE
! 
INTEGER             ::  LEN_TRIM
INTEGER             ::  ILEN1, ILEN2
CHARACTER*128       ::  CLEN1, CLEN2
!!==============================
ILEN1=LEN_TRIM(COUTDIR)
WRITE(CLEN1,*) ILEN1
ILEN2=LEN_TRIM(CVARNAME)
WRITE(CLEN2,*) ILEN2
!
WRITE(CFILE,'(A'//CLEN1//',A'//CLEN2//',I4,A10)') COUTDIR,CVARNAME,IYEAR,CSUFVEC
OPEN(IFN,FILE=CFILE,FORM='UNFORMATTED',ACCESS='DIRECT',RECL=4*NSEQMAX)

END SUBROUTINE OPEN_OUTVEC





!!================================================
SUBROUTINE OPEN_OUTPTH(IYEAR,IFN,COUTDIR,CVARNAME)
IMPLICIT NONE

! 
INTEGER             ::  IYEAR               !! YEAR
INTEGER             ::  IFN                 !! FILE NUM
CHARACTER*128       ::  COUTDIR             !! OUTPUT DIR
CHARACTER*128       ::  CVARNAME            !! VARIAVLE NAME
! 
CHARACTER*128       ::  CFILE
! 
INTEGER             ::  LEN_TRIM
INTEGER             ::  ILEN1, ILEN2
CHARACTER*128       ::  CLEN1, CLEN2
!!==============================
ILEN1=LEN_TRIM(COUTDIR)
WRITE(CLEN1,*) ILEN1
ILEN2=LEN_TRIM(CVARNAME)
WRITE(CLEN2,*) ILEN2
!
WRITE(CFILE,'(A'//CLEN1//',A'//CLEN2//',I4,A10)') COUTDIR,CVARNAME,IYEAR,CSUFPTH
OPEN(IFN,FILE=CFILE,FORM='UNFORMATTED',ACCESS='DIRECT',RECL=4*NPTHOUT*NPTHLEV)

END SUBROUTINE OPEN_OUTPTH





!!==================================================
SUBROUTINE OPEN_OUTBIN(IYEAR,IFN,COUTDIR,CVARNAME)
IMPLICIT NONE

INTEGER             ::  IYEAR               !! YEAR
INTEGER             ::  IFN                 !! FILE NUM
CHARACTER*128       ::  COUTDIR             !! OUTPUT DIR
CHARACTER*128       ::  CVARNAME            !! VARIAVLE NAME

CHARACTER*128       ::  CFILE

INTEGER             ::  LEN_TRIM
INTEGER             ::  ILEN1, ILEN2
CHARACTER*128       ::  CLEN1, CLEN2
!!==============================
ILEN1=LEN_TRIM(COUTDIR)
WRITE(CLEN1,*) ILEN1
ILEN2=LEN_TRIM(CVARNAME)
WRITE(CLEN2,*) ILEN2

WRITE(CFILE,'(A'//CLEN1//',A'//CLEN2//',I4,A10)') COUTDIR,CVARNAME,IYEAR,CSUFBIN
OPEN(IFN,FILE=CFILE,FORM='UNFORMATTED',ACCESS='DIRECT',RECL=4*NX*NY)

END SUBROUTINE OPEN_OUTBIN

END SUBROUTINE CREATE_OUTBIN
END MODULE CREATE_OUTBIN_MOD
