MODULE CALC_DIKSTG_MOD
CONTAINS
SUBROUTINE CALC_DIKSTG
! ===========================================================
! calculate river and floodplain staging with dike considered
! but without dike failure
! THIS PROGRAM IS PROBLEMATIC, NOT USE
! ===========================================================
USE PARKIND1   ,ONLY: JPIM, JPRB
USE MOD_INPUT  ,ONLY: NLFP
USE MOD_MAP    ,ONLY: NSEQALL
USE MOD_MAP    ,ONLY: D2GRAREA, D2RIVLEN, D2RIVWTH, D2RIVSTOMAX, D2FLDSTOMAX, D2FLDGRD, DFRCINC
USE MOD_MAP    ,ONLY: D2DIKHGT, D2DIKSTOMAX, D2DIKFLDSTO, D2RIVHGT, D2FLDHGT, D2FLDSTORES
USE MOD_PROG   ,ONLY: D2RIVSTO_OUT, D2FLDSTO_OUT
USE MOD_DIAG   ,ONLY: D2RIVDPH, D2FLDDPH, D2FLDFRC, D2FLDARE, DGLBRIVSTO, DGLBFLDSTO, DGLBFLDARE
IMPLICIT NONE

!*** LOCAL
!$ SAVE
INTEGER(KIND=JPIM) ::  ISEQ, I
REAL(KIND=JPRB)    ::  DSTOALL, DSTONOW, DSTOPRE, DWTHNOW, DWTHPRE, DDPHPRE, DWTHINC
REAL(KIND=JPRB)    ::  DSTORES, DWTHRES
!$OMP THREADPRIVATE (I,DSTOALL, DSTONOW, DSTOPRE, DWTHNOW, DWTHPRE, DDPHPRE, DWTHINC)
!!==============================
DGLBRIVSTO=0.D0
DGLBFLDSTO=0.D0
DGLBFLDARE=0.D0

!$OMP PARALLEL DO REDUCTION(+:DGLBRIVSTO,DGLBFLDSTO,DGLBFLDARE)
DO ISEQ=1, NSEQALL
!
  DSTOALL = D2RIVSTO_OUT(ISEQ,1) + D2FLDSTO_OUT(ISEQ,1)
  IF( DSTOALL > D2DIKFLDSTO(ISEQ,1) )THEN
    I=1
    DSTOPRE = D2RIVSTOMAX(ISEQ,1)
    DWTHPRE = D2RIVWTH(ISEQ,1)
    DDPHPRE = 0.D0
    DWTHINC = D2GRAREA(ISEQ,1) * D2RIVLEN(ISEQ,1)**(-1.) * DFRCINC
    DO WHILE( DSTOALL > D2FLDSTOMAX(ISEQ,1,I) .AND. I<=NLFP)
      DSTOPRE = D2FLDSTOMAX(ISEQ,1,I)
      DWTHPRE = DWTHPRE + DWTHINC
      DDPHPRE = DDPHPRE + D2FLDGRD(ISEQ,1,I) * DWTHINC
      I=I+1
      IF( I>NLFP ) EXIT
    END DO
    IF( I>NLFP )THEN
      DSTONOW = DSTOALL - DSTOPRE
      DWTHNOW = 0.D0
      D2FLDDPH(ISEQ,1) = DDPHPRE + DSTONOW * DWTHPRE**(-1.) * D2RIVLEN(ISEQ,1)**(-1.)
    ELSE
      DSTONOW =  DSTOALL - DSTOPRE
      DWTHNOW = -DWTHPRE + ( DWTHPRE**2. + 2.D0 * DSTONOW * D2RIVLEN(ISEQ,1)**(-1.) * D2FLDGRD(ISEQ,1,I)**(-1.) )**0.5
      D2FLDDPH(ISEQ,1) = DDPHPRE + D2FLDGRD(ISEQ,1,I) * DWTHNOW
    ENDIF
    D2RIVSTO_OUT(ISEQ,1) = D2RIVSTOMAX(ISEQ,1) + D2RIVLEN(ISEQ,1) * D2RIVWTH(ISEQ,1) * D2FLDDPH(ISEQ,1)
    D2RIVDPH(ISEQ,1) = D2RIVSTO_OUT(ISEQ,1) * D2RIVLEN(ISEQ,1)**(-1.) * D2RIVWTH(ISEQ,1)**(-1.)
!
    D2FLDSTO_OUT(ISEQ,1) = DSTOALL - D2RIVSTO_OUT(ISEQ,1)
    D2FLDSTO_OUT(ISEQ,1) = MAX( D2FLDSTO_OUT(ISEQ,1), 0.D0 )
    D2FLDFRC(ISEQ,1) = (-D2RIVWTH(ISEQ,1) + DWTHPRE + DWTHNOW ) * (DWTHINC*10.D0)**(-1.)
    D2FLDFRC(ISEQ,1) = MAX( D2FLDFRC(ISEQ,1),0.D0)
    D2FLDFRC(ISEQ,1) = MIN( D2FLDFRC(ISEQ,1),1.D0)
    D2FLDARE(ISEQ,1) = D2GRAREA(ISEQ,1)*D2FLDFRC(ISEQ,1)
!
  ELSE IF (DSTOALL > D2DIKSTOMAX(ISEQ,1) ) THEN
    D2RIVSTO_OUT(ISEQ,1) = D2DIKSTOMAX(ISEQ,1)
    D2RIVDPH(ISEQ,1) = D2RIVHGT(ISEQ,1)
!    
    I=1
    DSTOPRE = D2RIVSTOMAX(ISEQ,1)
    DWTHPRE = D2RIVWTH(ISEQ,1)
    DDPHPRE = 0.D0
    DWTHINC = D2GRAREA(ISEQ,1) * D2RIVLEN(ISEQ,1)**(-1.) * DFRCINC
!
    DSTORES = DSTOALL - D2RIVSTO_OUT(ISEQ,1) ! residual storage
    DO WHILE( DSTORES > D2FLDSTORES(ISEQ,1,I) .AND. I<=NLFP)
      DSTOPRE = D2FLDSTOMAX(ISEQ,1,I)
      DWTHPRE = DWTHPRE + DWTHINC
      DDPHPRE = DDPHPRE + D2FLDGRD(ISEQ,1,I) * DWTHINC
      I=I+1
      IF( I>NLFP ) EXIT
    END DO
    IF( I>NLFP )THEN
      DSTONOW = DSTOALL - DSTOPRE
      DWTHNOW = 0.D0
      D2FLDDPH(ISEQ,1) = DDPHPRE + DSTONOW * DWTHPRE**(-1.) * D2RIVLEN(ISEQ,1)**(-1.)
    ELSE
      DSTONOW = DSTORES - D2FLDSTORES(ISEQ,1,I-1)
      DWTHRES = DWTHPRE - D2RIVWTH(ISEQ,1)
      DWTHNOW = -DWTHRES + ( DWTHRES**2. + 2.D0 * DSTONOW * D2RIVLEN(ISEQ,1)**(-1.) * D2FLDGRD(ISEQ,1,I)**(-1.) )**0.5
      D2FLDDPH(ISEQ,1) = DDPHPRE + D2FLDGRD(ISEQ,1,I) * DWTHNOW
    ENDIF
    D2FLDSTO_OUT(ISEQ,1) = DSTOALL - D2RIVSTO_OUT(ISEQ,1)
    D2FLDSTO_OUT(ISEQ,1) = MAX( D2FLDSTO_OUT(ISEQ,1), 0.D0 )
    D2FLDFRC(ISEQ,1) = (-D2RIVWTH(ISEQ,1) + DWTHPRE + DWTHNOW ) * (DWTHINC*10.D0)**(-1.)
    D2FLDFRC(ISEQ,1) = MAX( D2FLDFRC(ISEQ,1),0.D0)
    D2FLDFRC(ISEQ,1) = MIN( D2FLDFRC(ISEQ,1),1.D0)
    D2FLDARE(ISEQ,1) = D2GRAREA(ISEQ,1)*D2FLDFRC(ISEQ,1)
!
! No flooding
  ELSE
    D2RIVSTO_OUT(ISEQ,1) = DSTOALL
    D2RIVDPH(ISEQ,1) = DSTOALL * D2RIVLEN(ISEQ,1)**(-1.) * D2RIVWTH(ISEQ,1)**(-1.)
    D2RIVDPH(ISEQ,1) = MAX( D2RIVDPH(ISEQ,1), 0.D0 )
    D2FLDSTO_OUT(ISEQ,1) = 0.D0
    D2FLDDPH(ISEQ,1) = 0.D0
    D2FLDFRC(ISEQ,1) = 0.D0
    D2FLDARE(ISEQ,1) = 0.D0
  ENDIF

  DGLBRIVSTO      = DGLBRIVSTO + D2RIVSTO_OUT(ISEQ,1)
  DGLBFLDSTO      = DGLBFLDSTO + D2FLDSTO_OUT(ISEQ,1)
  DGLBFLDARE      = DGLBFLDARE + D2FLDARE(ISEQ,1)

END DO
!$OMP END PARALLEL DO


END SUBROUTINE CALC_DIKSTG
END MODULE CALC_DIKSTG_MOD
