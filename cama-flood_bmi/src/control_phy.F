MODULE CONTROL_PHY_MOD
CONTAINS 
SUBROUTINE CONTROL_PHY
! ================================================
! CONTROL physics
! ================================================

USE PARKIND1   ,ONLY: JPIM, JPRB, JPRM
USE MOD_INPUT  ,ONLY: LOGNAM,DT,DT_DEF,LKINE,LADPSTP,LFLDOUT,LPTHOUT,LDAM !! **DAM
USE MOD_INPUT  ,ONLY: PGRV, PDSTMTH, PCADP, IRESTART,LSTOONLY
USE MOD_MAP    ,ONLY: NSEQALL,NSEQRIV,NPTHOUT
USE MOD_PROG   ,ONLY: D2RIVOUT_OUT, D2FLDOUT_OUT, D1PTHFLW_OUT
USE MOD_DIAG   ,ONLY: D2RIVVEL, D2PTHOUT, D2PTHINF, D2OUTFLW_AVG,D2OUTFLW
USE MOD_DIAG   ,ONLY: D2RIVOUT_AVG, D2FLDOUT_AVG, D2RIVVEL_AVG, D2PTHOUT_AVG, D1PTHFLW_AVG, NADD
USE MOD_INPUT  ,ONLY: LDIKHGT


USE CALC_FLDSTG_MOD
USE CALC_RIVOUT_MOD
USE CALC_FLDOUT_MOD
USE CALC_PTHOUT_MOD
USE CALC_DAMOUT_MOD   !! **DAM
USE CALC_OUTPRE_MOD
USE CALC_STONXT_MOD
USE CALC_WATBAL_MOD
USE CALC_RIVOUT_KINE_MOD
USE CALC_DIKSTG_MOD

implicit none

!! LOCAL
INTEGER(KIND=JPIM)  ::  IT, NT
INTEGER(KIND=JPIM)  ::  IFIRST
DATA                    IFIRST / 0 /
SAVE                    IFIRST

INTEGER(KIND=JPIM)            ::  ISEQ, IPTH

!$ SAVE                           ISEQ, IPTH
!!========================================
! WRITE(LOGNAM,*) " "
! WRITE(LOGNAM,*) "****CONTROLPHY: ****"

!!=======================================

IF( IFIRST==0 )THEN
  WRITE(LOGNAM,*) 'ADPSTP: daily diagnose'
  IF( LDIKHGT ) THEN
    CALL CALC_DIKSTG
  ELSE
    CALL CALC_FLDSTG
  ENDIF
  IF( LSTOONLY )THEN
    CALL CALC_OUTPRE
  ENDIF
  IFIRST=1
ENDIF

NT=1
IF( LADPSTP )THEN                                                     ! adoptive time step
  CALL CALC_ADPSTP
ENDIF

!! ==========
DO IT=1, NT

!!=0 . INIT

! ====================================
! 1. Calculate discharge, diffusive wave
  IF ( .not. LKINE ) THEN 
    CALL CALC_RIVOUT

    IF( LFLDOUT )THEN
      CALL CALC_FLDOUT
    ENDIF

    IF( LPTHOUT )THEN
      CALL CALC_PTHOUT
    ENDIF

  ELSE
    CALL CALC_RIVOUT_KINE
  ENDIF

  IF ( LDAM ) THEN     !! **DAM
    CALL CALC_DAMOUT
  ENDIF

! ====================================
! 2.  Calculate the storage in the next time step in FTCS diff. eq.
  CALL CALC_STONXT

! ====================================
! 3a. calculate river and floodplain staging with dikes considered
  IF( LDIKHGT ) THEN
    CALL CALC_DIKSTG

! ====================================
! 3b. calculate river and floodplain staging
  ELSE
    CALL CALC_FLDSTG
  ENDIF

! ====================================
! 4.  write water balance monitoring to IOFILE
  CALL CALC_WATBAL(IT)

! ====================================
! 5. calculate daily average
  NADD=NADD+1
  !$OMP PARALLEL DO
  DO ISEQ=1, NSEQALL
    D2RIVOUT_AVG(ISEQ,1)=D2RIVOUT_AVG(ISEQ,1)+D2RIVOUT_OUT(ISEQ,1)
    D2FLDOUT_AVG(ISEQ,1)=D2FLDOUT_AVG(ISEQ,1)+D2FLDOUT_OUT(ISEQ,1)
    D2RIVVEL_AVG(ISEQ,1)=D2RIVVEL_AVG(ISEQ,1)+D2RIVVEL(ISEQ,1)
    D2OUTFLW_AVG(ISEQ,1)=D2OUTFLW_AVG(ISEQ,1)+D2OUTFLW(ISEQ,1)    !! bugfix v362
  END DO
  !$OMP END PARALLEL DO

  IF( LPTHOUT )THEN
    !$OMP PARALLEL DO
    DO ISEQ=1, NSEQALL
      D2PTHOUT_AVG(ISEQ,1)=D2PTHOUT_AVG(ISEQ,1)+D2PTHOUT(ISEQ,1)-D2PTHINF(ISEQ,1)
    END DO
    !$OMP END PARALLEL DO

    !$OMP PARALLEL DO
    DO IPTH=1, NPTHOUT
      D1PTHFLW_AVG(IPTH,:)=D1PTHFLW_AVG(IPTH,:)+D1PTHFLW_OUT(IPTH,:)
    END DO
    !$OMP END PARALLEL DO
  ENDIF

END DO

DT=DT_DEF   !! reset DT



CONTAINS

! ==================================================
SUBROUTINE CALC_ADPSTP

USE MOD_INPUT  ,ONLY: LSTOONLY
USE MOD_MAP    ,ONLY: D2NXTDST
USE MOD_DIAG   ,ONLY: D2RIVDPH

IMPLICIT NONE

!$ SAVE
INTEGER(KIND=JPIM) ::  ISEQ
REAL(KIND=JPRB)    ::  DT_MIN, DDPH, DDST
!$OMP THREADPRIVATE(DDPH,DDST)
! ==========
DT_MIN=DT_DEF
!$OMP PARALLEL DO REDUCTION(MIN:DT_MIN)
DO ISEQ=1, NSEQRIV
  DDPH=MAX(D2RIVDPH(ISEQ,1),0.01D0 )
  DDST=D2NXTDST(ISEQ,1)
  DT_MIN=min( DT_MIN, PCADP*DDST * (PGRV*DDPH)**(-0.5) )
END DO
!$OMP END PARALLEL DO

!$OMP PARALLEL DO REDUCTION(MIN:DT_MIN)
DO ISEQ=NSEQRIV+1, NSEQALL
  DDPH=MAX(D2RIVDPH(ISEQ,1),0.01D0 )
  DDST=PDSTMTH
  DT_MIN=min( DT_MIN, PCADP*DDST * (PGRV*DDPH)**(-0.5) )
END DO
!$OMP END PARALLEL DO
NT=INT( DT_DEF * DT_MIN**(-1.) -0.01 )+1
DT=DT_DEF * REAL(NT)**(-1.)
IF( NT>=2 ) WRITE(LOGNAM,'(A15,I4,3F10.2)') "ADPSTP: NT=",NT, DT_DEF, DT_MIN, DT
! ==================================================
END SUBROUTINE CALC_ADPSTP




END SUBROUTINE CONTROL_PHY
END MODULE CONTROL_PHY_MOD
